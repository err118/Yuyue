<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuyue.mapper.UserMapper">
	<cache type="com.yuyue.cache.redis.RedisCache" />
	<resultMap id="BaseResultMap" type="com.yuyue.model.User">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="token" property="token" jdbcType="VARCHAR" />
		<result column="wx_id" property="wxId" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="CHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="father_id" property="fatherId" jdbcType="BIGINT" />
		<result column="shop_id" property="shopId" jdbcType="BIGINT" />
		<result column="money" property="money" jdbcType="REAL" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="last_time" property="lastTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, token, wx_id, password, nickname,avatar_url, phone,
		father_id,
		shop_id, money,
		create_time,
		last_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.yuyue.model.User">
		insert into user (id, token,
		wx_id,
		password, nickname,avatar_url, phone,
		father_id, shop_id, money,
		create_time, last_time)
		values (#{id,jdbcType=BIGINT},
		#{token,jdbcType=VARCHAR},
		#{wxId,jdbcType=VARCHAR},
		#{password,jdbcType=CHAR}, #{nickname,jdbcType=VARCHAR},
		#{avatarUrl,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{fatherId,jdbcType=BIGINT},
		#{shopId,jdbcType=BIGINT},
		#{money,jdbcType=REAL},
		#{createTime,jdbcType=TIMESTAMP},
		#{lastTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.yuyue.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="token != null">
				token,
			</if>
			<if test="wxId != null">
				wx_id,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="avatarUrl != null">
				avatar_url,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="fatherId != null">
				father_id,
			</if>
			<if test="shopId != null">
				shop_id,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="lastTime != null">
				last_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="token != null">
				#{token,jdbcType=VARCHAR},
			</if>
			<if test="wxId != null">
				#{wxId,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=CHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="avatarUrl != null">
				#{avatarUrl,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="fatherId != null">
				#{fatherId,jdbcType=BIGINT},
			</if>
			<if test="shopId != null">
				#{shopId,jdbcType=BIGINT},
			</if>
			<if test="money != null">
				#{money,jdbcType=REAL},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastTime != null">
				#{lastTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.yuyue.model.User">
		update user
		<set>
			<if test="token != null">
				token = #{token,jdbcType=VARCHAR},
			</if>
			<if test="wxId != null">
				wx_id = #{wxId,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=CHAR},
			</if>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="avatarUrl != null">
				avatar_url = #{avatarUrl,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="fatherId != null">
				father_id = #{fatherId,jdbcType=BIGINT},
			</if>
			<if test="shopId != null">
				shop_id = #{shopId,jdbcType=BIGINT},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=REAL},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastTime != null">
				last_time = #{lastTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yuyue.model.User">
		update user
		set
		token = #{token,jdbcType=VARCHAR},
		wx_id = #{wxId,jdbcType=VARCHAR},
		password = #{password,jdbcType=CHAR},
		nickname =
		#{nickname,jdbcType=VARCHAR},
		avatar_url =
		#{avatarUrl,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		father_id = #{fatherId,jdbcType=BIGINT},
		shop_id =
		#{shopId,jdbcType=BIGINT},
		money = #{money,jdbcType=REAL},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		last_time =
		#{lastTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!--新增 -->
	<select id="selectByWxId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where wx_id = #{wxId,jdbcType=BIGINT}
	</select>

	<update id="joinShop">
		update user
		set
		shop_id = #{shopId, jdbcType=BIGINT}
		where id = #{userId, jdbcType=BIGINT}
	</update>
	<update id="leaveShop">
		update user
		set
		shop_id = 0
		where token = #{tokenId,
		jdbcType=VARCHAR}
	</update>
	<select id="selectByToken" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where token = #{tokenId,jdbcType=BIGINT}
	</select>
	<select id="selectStaffs" resultMap="BaseResultMap">
		select
		user.*
		from user, shop_staff
		where shop_staff.shop_id = #{shopId,jdbcType=BIGINT}
		and user.id = shop_staff.user_id
		and shop_staff.status = 0
	</select>
</mapper>