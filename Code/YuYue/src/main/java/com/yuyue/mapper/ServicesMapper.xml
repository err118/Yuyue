<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuyue.mapper.ServicesMapper">
	<cache type="com.yuyue.cache.redis.RedisCache" />
	<resultMap id="BaseResultMap" type="com.yuyue.model.Services">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="price" jdbcType="REAL" property="price" />
		<result column="unit" jdbcType="VARCHAR" property="unit" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="category_id" jdbcType="BIGINT" property="categoryId" />
		<result column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="shop_id" jdbcType="BIGINT" property="shopId" />
		<result column="grade" jdbcType="INTEGER" property="grade" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, title, content, price, unit, status, category_id,
		user_id,
		shop_id, grade,
		type, create_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from services
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		services
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.yuyue.model.Services">
		insert into services (id,
		name, title,
		content, price, unit,
		status, category_id, user_id,
		shop_id, grade, type,
		create_time)
		values (#{id,jdbcType=BIGINT},
		#{name,jdbcType=VARCHAR},
		#{title,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR}, #{price,jdbcType=REAL},
		#{unit,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER},
		#{categoryId,jdbcType=BIGINT},
		#{userId,jdbcType=BIGINT},
		#{shopId,jdbcType=BIGINT}, #{grade,jdbcType=INTEGER},
		#{type,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.yuyue.model.Services">
		insert into services
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="unit != null">
				unit,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="categoryId != null">
				category_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="shopId != null">
				shop_id,
			</if>
			<if test="grade != null">
				grade,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=REAL},
			</if>
			<if test="unit != null">
				#{unit,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="categoryId != null">
				#{categoryId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="shopId != null">
				#{shopId,jdbcType=BIGINT},
			</if>
			<if test="grade != null">
				#{grade,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.yuyue.model.Services">
		update services
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=REAL},
			</if>
			<if test="unit != null">
				unit = #{unit,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="categoryId != null">
				category_id = #{categoryId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="shopId != null">
				shop_id = #{shopId,jdbcType=BIGINT},
			</if>
			<if test="grade != null">
				grade = #{grade,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.yuyue.model.Services">
		update services
		set name = #{name,jdbcType=VARCHAR},
		title = #{title,jdbcType=VARCHAR},
		content = #{content,jdbcType=VARCHAR},
		price = #{price,jdbcType=REAL},
		unit = #{unit,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		category_id = #{categoryId,jdbcType=BIGINT},
		user_id =
		#{userId,jdbcType=BIGINT},
		shop_id = #{shopId,jdbcType=BIGINT},
		grade =
		#{grade,jdbcType=INTEGER},
		type = #{type,jdbcType=INTEGER},
		create_time
		= #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!-- 以下为新增 -->
	<select id="selectIndexServiceWithUser" resultType="com.yuyue.model.ServiceWithUserInfo">
		SELECT
		services.*, user.avatar_url, user.nickname,
		shop.shop_name
		FROM services
		INNER JOIN user ON services.user_id =
		user.id
		LEFT JOIN shop ON
		user.shop_id = shop.id
	</select>
	<select id="selectServiceByUserId" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		from services
		where user_id = #{userId,jdbcType=BIGINT}
	</select>
	<update id="deleteByUserId">
		update services
		set
		status = 1
		where
		id=
		#{id,jdbcType=BIGINT}
		and
		user_id=
		#{userId,jdbcType=BIGINT}
	</update>
</mapper>